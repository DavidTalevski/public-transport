services:
  config-server:
    image: mongo:8.0.4
    command: mongod --configsvr --replSet configrs --bind_ip_all
    volumes:
      - config-data:/data/configdb
    networks:
      mongo-network:
        aliases:
          - cfg-srv
    healthcheck:
      test: ["CMD", "mongosh", "--port", "27019", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 30s
      retries: 5
    ports:
      - "27019:27019"

  shard1:
    image: mongo:8.0.4
    command: mongod --shardsvr --replSet shard1rs --bind_ip_all
    volumes:
      - shard1-data:/data/db
    networks:
      mongo-network:
        aliases:
          - s1
    healthcheck:
      test: ["CMD", "mongosh", "--port", "27018", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 30s
      retries: 5
    ports:
      - "27018:27018"

  shard2:
    image: mongo:8.0.4
    command: mongod --shardsvr --replSet shard2rs --bind_ip_all
    volumes:
      - shard2-data:/data/db
    networks:
      mongo-network:
        aliases:
          - s2
    healthcheck:
      test: ["CMD", "mongosh", "--port", "27018", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 30s
      retries: 5
    ports:
      - "27020:27018"

  mongos:
    image: mongo:8.0.4
    command: mongos --configdb configrs/config-server:27019 --bind_ip_all
    depends_on:
      config-server:
        condition: service_healthy
      shard1:
        condition: service_healthy
      shard2:
        condition: service_healthy
    volumes:
      - ${MONGO_DUMP_PATH:-./mongo-dump}:/docker-mongo-dump
    networks:
      - mongo-network
    ports:
      - "27021:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--port", "27017", "--eval", "sh.status()"]
      interval: 10s
      timeout: 30s
      retries: 10

volumes:
  config-data:
  shard1-data:
  shard2-data:

networks:
  mongo-network:
    driver: bridge